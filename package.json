{
  "name": "midas",
  "displayName": "midas",
  "icon": "docs/index.png",
  "description": "Midas: A GDB & RR Visual Studio Code Debug Adapter",
  "keywords": [
    "gdb",
    "midas",
    "debug",
    "rr"
  ],
  "version": "0.23.7",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Debuggers"
  ],
  "activationEvents": [
    "onStartupFinished",
    "onDebug",
    "onFileSystem:midas-notes"
  ],
  "main": "./extension.js",
  "publisher": "farrese",
  "repository": {
    "type": "git",
    "url": "https://github.com/farre/midas"
  },
  "contributes": {
    "configuration": [
      {
        "title": "Midas toolchains",
        "properties": {
          "midas.rr": {
            "type": "string",
            "default": null,
            "description": "Path to RR. This setting is not required, as Midas will look for RR in $PATH if not set."
          },
          "midas.gdb": {
            "type": "string",
            "default": null,
            "description": "Path to GDB. This setting is not required, as Midas will look for GDB in $PATH if not set."
          }
        }
      }
    ],
    "views": {
      "debug": [
        {
          "type": "webview",
          "id": "midas.checkpoints-ui",
          "name": "Checkpoints",
          "contextualTitle": "RR Checkpoints",
          "when": "midas.rrSession == true"
        }
      ]
    },
    "breakpoints": [
      {
        "language": "c"
      },
      {
        "language": "cpp"
      },
      {
        "language": "rust"
      }
    ],
    "commands": [
      {
        "command": "midas.toggle-hex-formatting",
        "title": "Toggle hex formatting",
        "shortTitle": "Format: Hex"
      },
      {
        "command": "midas.zen-workaround",
        "title": "Run RR Zen Workaround",
        "shortTitle": "Zen Workaround"
      },
      {
        "command": "midas.issue-report",
        "title": "Midas: Create github issue log",
        "shortTitle": "Midas: Create github issue log"
      },
      {
        "command": "midas.rr-record",
        "title": "Record the execution of a binary",
        "shortTitle": "rr Record"
      },
      {
        "command": "midas.continueAll",
        "title": "Continue all threads",
        "shortTitle": "Continue All",
        "icon": "$(notebook-execute-all)",
        "enablement": "midas.noSingleThreadControl == false"
      },
      {
        "command": "midas.pauseAll",
        "title": "Pause all threads",
        "shortTitle": "Pause all",
        "icon": "$(debug-pause)",
        "enablement": "midas.noSingleThreadControl == false"
      },
      {
        "command": "midas.reverse-finish",
        "title": "Reverse finish",
        "shortTitle": "Reverse finish",
        "icon": "$(debug-step-out)",
        "enablement": "midas.rrSession == true && midas.Running == false"
      },
      {
        "command": "midas.hot-reload-scripts",
        "title": "Re-initializes Midas",
        "shortTitle": "Re-initialize"
      },
      {
        "command": "midas.show-logs",
        "title": "Midas: Open logs",
        "shortTitle": "Midas: Open logs"
      },
      {
        "command": "midas.get-mdb",
        "title": "Midas: Get Midas x86-64 Debugger",
        "shortTitle": "Get MDB"
      },
      {
        "command": "midas.get-gdb",
        "title": "Midas: Get GDB",
        "shortTitle": "Get GDB"
      },
      {
        "command": "midas.get-rr",
        "title": "Midas: Get rr",
        "shortTitle": "Get rr"
      },
      {
        "command": "midas.show-release-notes",
        "title": "Midas: Show Release Notes",
        "shortTitle": "Show Release Notes"
      },
      {
        "command": "midas.clear-checkpoints",
        "category": "Midas Checkpoints",
        "title": "Clear checkpoints"
      },
      {
        "command": "midas.set-checkpoint",
        "category": "Midas Checkpoints",
        "title": "Set Checkpoint",
        "icon": "assets/icons/checkpoint.svg"
      },
      {
        "command": "midas.run-to-event",
        "category": "Midas RR",
        "title": "Run to event",
        "icon": "assets/icons/run-to-event.svg"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "midas.clear-checkpoints",
          "when": "view == midas.checkpoints-ui"
        }
      ],
      "view/title": [
        {
          "command": "midas.clear-checkpoints",
          "group": "midas",
          "when": "view == midas.checkpoints-ui"
        }
      ],
      "debug/toolBar": [
        {
          "command": "midas.continueAll",
          "group": "midas",
          "when": "(midas.noSingleThreadControl == false && midas.debugType != midas-rr)"
        },
        {
          "command": "midas.pauseAll",
          "group": "midas",
          "when": "midas.noSingleThreadControl == false && (midas.debugType == midas-gdb || midas.debugType == midas-native)"
        },
        {
          "command": "midas.reverse-finish",
          "group": "midas",
          "when": "midas.rrSession == true"
        },
        {
          "command": "midas.set-checkpoint",
          "group": "midas",
          "when": "midas.rrSession == true"
        },
        {
          "command": "midas.run-to-event",
          "group": "midas",
          "when": "midas.rrSession == true"
        }
      ],
      "debug/callstack/context": [
        {
          "command": "midas.continueAll",
          "group": "midas",
          "when": "(midas.noSingleThreadControl == false && midas.debugType != midas-rr)"
        },
        {
          "command": "midas.pauseAll",
          "group": "midas",
          "when": "(midas.noSingleThreadControl == false && midas.debugType != midas-rr)"
        }
      ],
      "debug/variables/context": [
        {
          "command": "midas.toggle-hex-formatting",
          "group": "midas"
        }
      ]
    },
    "debuggers": [
      {
        "type": "midas-gdb",
        "label": "C/C++ Midas GDB",
        "languages": [
          "c",
          "cpp",
          "cuda-cpp",
          "rust"
        ],
        "configurationAttributes": {
          "launch": {
            "properties": {
              "ignoreStandardLibrary": {
                "type": "boolean",
                "description": "Ignore stepping through standard library code (best approximation)",
                "default": true
              },
              "prettyPrinterPath": {
                "type": "string",
                "description": "Paths from where to import pretty printers",
                "default": ""
              },
              "program": {
                "type": "string",
                "description": "Binary to debug. Only required for 'gdb' mode."
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Set breakpoint on main",
                "default": true
              },
              "trace": {
                "type": [
                  "string"
                ],
                "description": "Debug trace logging",
                "enum": [
                  "Off",
                  "GDB Events",
                  "Python logs",
                  "Full"
                ],
                "default": "Off",
                "enumDescriptions": [
                  "Turn all logging off",
                  "Turn trace logging of GDB events on",
                  "Turn debug logging of from Python on",
                  "Turn on additional debug logging to time.log and update.log, made by Python scripts"
                ]
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Command line arguments passed to debuggee program",
                "default": []
              },
              "allStopMode": {
                "type": "boolean",
                "description": "Whether or not GDB should run in all stop mode",
                "deprecationMessage": "Use 'noSingleThreadControl' instead."
              },
              "noSingleThreadControl": {
                "type": "boolean",
                "description": "Whether or not GDB should run in all stop mode",
                "default": true
              },
              "gdbPath": {
                "type": "string",
                "description": "Path to GDB. Defaults to trying to execute GDB in $PATH",
                "default": "gdb"
              },
              "gdbOptions": {
                "type": "array",
                "description": "GDB Arguments."
              },
              "cwd": {
                "type": "string",
                "description": "Current working directory of GDB",
                "default": "${workspaceFolder}"
              },
              "setupCommands": {
                "type": "array",
                "description": "GDB Commands to run before debugging."
              },
              "attachOnFork": {
                "type": "boolean",
                "description": "Whether or not GDB should attach on fork, for instance if you're debugging a target that spawns new processes with `fork`"
              },
              "externalConsole": {
                "type": "object",
                "default": {
                  "path": "",
                  "closeTerminalOnEndOfSession": true,
                  "endSessionOnTerminalExit": true
                },
                "description": "External console settings",
                "required": [
                  "path"
                ],
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to terminal to launch. If it exists in $PATH only the command name has to be provided",
                    "default": ""
                  },
                  "closeTerminalOnEndOfSession": {
                    "type": "boolean",
                    "default": true,
                    "description": "Attempt to close terminal at the end of debug session"
                  },
                  "endSessionOnTerminalExit": {
                    "type": "boolean",
                    "default": true,
                    "description": "End debug session if external console exits"
                  }
                }
              }
            }
          },
          "attach": {
            "properties": {
              "ignoreStandardLibrary": {
                "type": "boolean",
                "description": "Ignore stepping through standard library code (best approximation)",
                "default": true
              },
              "pid": {
                "type": "string",
                "description": "Pid of the process to attach to. ${command:getPid} provides the user with an input box where the user types the process name. If multiple processes with that name exists a drop down list of PIDs to choose from will be displayed",
                "default": "${command:getPid}"
              },
              "trace": {
                "type": [
                  "string"
                ],
                "description": "Debug trace logging",
                "enum": [
                  "Off",
                  "GDB Events",
                  "Python logs",
                  "Full"
                ],
                "default": "Off",
                "enumDescriptions": [
                  "Turn all logging off",
                  "Turn trace logging of GDB events on",
                  "Turn debug logging of from Python on",
                  "Turn on additional debug logging to time.log and update.log, made by Python scripts"
                ]
              },
              "setupCommands": {
                "type": "array",
                "description": "GDB Commands to run before debugging."
              },
              "cwd": {
                "type": "string",
                "description": "Current working directory of GDB",
                "default": "${workspaceFolder}"
              },
              "gdbPath": {
                "type": "string",
                "description": "Path to GDB. Defaults to trying to execute GDB in $PATH",
                "default": "gdb"
              },
              "gdbOptions": {
                "type": "array",
                "description": "GDB Arguments."
              },
              "attachOnFork": {
                "type": "boolean",
                "description": "Whether or not GDB should attach on fork, for instance if you're debugging a target that spawns new processes with `fork`"
              },
              "target": {
                "type": "object",
                "description": "Attach to a running replay on a remote target",
                "default": {
                  "type": "remote",
                  "parameter": null
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Sets the target. Valid values are 'remote' and 'extended-remote'.",
                    "enum": [
                      "remote",
                      "extended-remote"
                    ]
                  },
                  "parameter": {
                    "type": "string",
                    "description": "How to substitute paths so that GDB can recognize where the source files are. If target file system matches identically, you don't have to substitute"
                  }
                },
                "required": [
                  "type",
                  "parameter"
                ]
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "midas-gdb",
            "request": "launch",
            "name": "Midas Launch",
            "program": "${workspaceFolder}/program",
            "stopOnEntry": true,
            "trace": "Off",
            "noSingleThreadControl": true,
            "cwd": "${workspaceFolder}",
            "setupCommands": [],
            "ignoreStandardLibrary": true
          },
          {
            "type": "midas-gdb",
            "request": "attach",
            "name": "Midas Attach",
            "pid": "${command:getPid}",
            "trace": "Off",
            "cwd": "${workspaceFolder}",
            "setupCommands": [],
            "ignoreStandardLibrary": true
          }
        ],
        "configurationSnippets": [
          {
            "name": "midas-gdb",
            "label": "Midas GDB: Launch",
            "description": "Launch normal debugging session for binary selected by user",
            "body": {
              "type": "midas-gdb",
              "request": "launch",
              "name": "${1:Launch Debug}",
              "program": "${2:/path/to/binary}",
              "cwd": "^\"\\${workspaceFolder}\"",
              "stopOnEntry": true,
              "trace": "${3:Off}",
              "gdbPath": "${4:gdb}",
              "noSingleThreadControl": true,
              "setupCommands": [],
              "attachOnFork": false,
              "ignoreStandardLibrary": true
            }
          },
          {
            "name": "midas-gdb",
            "label": "Midas GDB: Attach",
            "description": "Attach GDB to a running process",
            "body": {
              "type": "midas-gdb",
              "request": "attach",
              "name": "${1:Attach to process}",
              "cwd": "^\"\\${workspaceFolder}\"",
              "trace": "${4:Off}",
              "pid": "^\"\\${command:getPid}\"",
              "gdbPath": "${5:gdb}",
              "setupCommands": [],
              "attachOnFork": false,
              "ignoreStandardLibrary": true
            }
          },
          {
            "name": "midas-gdb",
            "label": "Midas GDB: Attach in remote session",
            "description": "Connect to remote instance of GDBServer that's debugging an application",
            "body": {
              "type": "midas-gdb",
              "request": "attach",
              "name": "Connect and run remote target",
              "trace": "${1:Off}",
              "setupCommands": [],
              "attachOnFork": false,
              "ignoreStandardLibrary": true,
              "target": {
                "type": "remote",
                "parameter": "127.0.0.1:12345"
              }
            }
          }
        ],
        "variables": {
          "getPid": "midas.getPid"
        }
      },
      {
        "type": "midas-rr",
        "label": "C/C++ Midas rr",
        "languages": [
          "c",
          "cpp",
          "cuda-cpp",
          "rust"
        ],
        "configurationAttributes": {
          "attach": {
            "properties": {
              "ignoreStandardLibrary": {
                "type": "boolean",
                "description": "Ignore stepping through standard library code (best approximation)",
                "default": true
              },
              "prettyPrinterPath": {
                "type": "string",
                "description": "Paths from where to import pretty printers",
                "default": ""
              },
              "trace": {
                "type": [
                  "string"
                ],
                "description": "Debug trace logging",
                "enum": [
                  "Off",
                  "GDB Events",
                  "Python logs",
                  "Full"
                ],
                "default": "Off",
                "enumDescriptions": [
                  "Turn all logging off",
                  "Turn trace logging of GDB events on",
                  "Turn debug logging of from Python on",
                  "Turn on additional debug logging to time.log and update.log, made by Python scripts"
                ]
              },
              "gdbPath": {
                "type": "string",
                "description": "Path to GDB. Defaults to trying to execute GDB in $PATH",
                "default": "gdb"
              },
              "gdbOptions": {
                "type": "array",
                "description": "GDB Arguments."
              },
              "rrOptions": {
                "type": "array",
                "description": "RR Command Line Options"
              },
              "cwd": {
                "type": "string",
                "description": "Current working directory of GDB",
                "default": "${workspaceFolder}"
              },
              "rrPath": {
                "type": "string",
                "description": "Path to rr. Defaults to trying to execute rr in $PATH (if managed by Midas this field is unnecessary)",
                "default": "rr"
              },
              "traceWorkspace": {
                "type": "string",
                "description": "trace workspace. Can be found running the rr command `rr ls`. If not set, user will be prompted for."
              },
              "setupCommands": {
                "type": "array",
                "description": "GDB Commands to run before debugging."
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Set breakpoint on main",
                "default": false
              },
              "externalConsole": {
                "type": "object",
                "default": {
                  "path": "",
                  "closeTerminalOnEndOfSession": true
                },
                "description": "External console settings",
                "required": [
                  "path"
                ],
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "Path to terminal to launch. If it exists in $PATH only the command name has to be provided",
                    "default": ""
                  },
                  "closeTerminalOnEndOfSession": {
                    "type": "boolean",
                    "default": true,
                    "description": "Attempt to close terminal at the end of debug session"
                  }
                }
              },
              "target": {
                "type": "object",
                "description": "Attach session on a running remote target",
                "default": {
                  "type": "remote",
                  "parameter": null
                },
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Sets the target. Valid values are 'remote' and 'extended-remote'.",
                    "enum": [
                      "remote",
                      "extended-remote"
                    ]
                  },
                  "parameter": {
                    "type": "string",
                    "description": "How to substitute paths so that GDB can recognize where the source files are. If target file system matches identically, you don't have to substitute"
                  }
                },
                "required": [
                  "type",
                  "parameter"
                ]
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "midas-rr",
            "request": "attach",
            "name": "Launch replay session",
            "trace": "Off",
            "cwd": "${workspaceFolder}",
            "setupCommands": [
              "set sysroot /",
              "set debuginfod enabled off",
              "set auto-load safe-path /"
            ],
            "ignoreStandardLibrary": true
          }
        ],
        "configurationSnippets": [
          {
            "name": "midas-rr",
            "label": "Midas rr debug session",
            "description": "Launches an RR debugging session",
            "body": {
              "type": "midas-rr",
              "request": "attach",
              "name": "${1:Launch replay debug session}",
              "cwd": "^\"\\${workspaceFolder}\"",
              "trace": "${3:Off}",
              "gdbPath": "${4:gdb}",
              "rrPath": "rr",
              "setupCommands": [
                "set sysroot /",
                "set debuginfod enabled off",
                "set auto-load safe-path /"
              ],
              "ignoreStandardLibrary": true
            }
          },
          {
            "name": "midas-rr",
            "label": "Midas rr remote session",
            "description": "Launches an RR debugging session",
            "body": {
              "type": "midas-rr",
              "request": "attach",
              "name": "${1:Launch replay debug session}",
              "cwd": "^\"\\${workspaceFolder}\"",
              "trace": "${3:Off}",
              "gdbPath": "${4:gdb}",
              "rrPath": "rr",
              "setupCommands": [
                "set sysroot /",
                "set debuginfod enabled off",
                "set auto-load safe-path /"
              ],
              "remoteTargetConfig": {
                "address": null,
                "substitute-path": {
                  "local": null,
                  "remote": null
                }
              },
              "ignoreStandardLibrary": true
            }
          }
        ]
      },
      {
        "type": "midas-native",
        "label": "Midas Native Debugger",
        "languages": [
          "c",
          "cpp"
        ],
        "configurationAttributes": {
          "launch": {
            "properties": {
              "ignoreStandardLibrary": {
                "type": "boolean",
                "description": "Ignore stepping through standard library code (best approximation)",
                "default": true
              },
              "program": {
                "type": "string",
                "description": "Binary to debug. Only required for 'gdb' mode."
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Set breakpoint on main",
                "default": true
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Command line arguments passed to debuggee program",
                "default": []
              },
              "dbgArgs": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Command line arguments passed when executing the mdb binary.",
                "default": []
              },
              "mdbPath": {
                "type": "string",
                "description": "Path to the MDB executable",
                "default": "mdb"
              },
              "breakpointBehavior": {
                "type": [
                  "string"
                ],
                "description": "Breakpoint hit-stop behavior",
                "enum": [
                  "Stop all threads",
                  "Stop single thread"
                ],
                "default": "Stop single thread",
                "enumDescriptions": [
                  "When a breakpoint is hit, stop all threads in the process",
                  "When a breakpoint is hit, only have the thread that hit the breakpoint stop"
                ]
              },
              "debug": {
                "type": "object",
                "description": "Developer Options (of Midas)",
                "default": {
                  "recordSession": false,
                  "logging": {
                    "dapMessages": false
                  }
                },
                "properties": {
                  "recordSession": {
                    "type": "boolean",
                    "description": "Record debug session using RR. This will spawn rr which in turn spawns MDB that we connect to as a debug adapter"
                  },
                  "logging": {
                    "type": "object",
                    "description": "Configure various levels of logging",
                    "properties": {
                      "dapMessages": {
                        "type": "boolean",
                        "description": "Log the messages between the debug adapter and the client"
                      }
                    }
                  }
                }
              }
            }
          },
          "attach": {
            "required": [
              "targetVariant"
            ],
            "properties": {
              "ignoreStandardLibrary": {
                "type": "boolean",
                "description": "Ignore stepping through standard library code (best approximation)",
                "default": true
              },
              "dbgArgs": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Command line arguments passed when executing the mdb binary.",
                "default": []
              },
              "mdbPath": {
                "type": "string",
                "description": "Path to the MDB executable",
                "default": "mdb"
              },
              "targetVariant": {
                "type": "object",
                "description": "Configuration of the kind of target we are to attach to.",
                "properties": {
                  "remote": {
                    "required": [
                      "host"
                    ],
                    "type": "object",
                    "description": "Remote stub that implements GDB Remote protocol to attach to",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "Remote host address and port to attach to",
                        "default": "127.0.0.1:12345"
                      }
                    }
                  },
                  "rr": {
                    "type": "object",
                    "required": [
                      "host"
                    ],
                    "description": "Target is an RR instance",
                    "properties": {
                      "host": {
                        "type": "string",
                        "description": "Remote host address and port to attach to",
                        "default": "127.0.0.1:12345"
                      },
                      "launch": {
                        "type": "boolean",
                        "description": "Let Midas handle the spawning of RR?",
                        "default": true
                      }
                    }
                  },
                  "native": {
                    "type": "object",
                    "required": [
                      "pid"
                    ],
                    "description": "Attach to a running process on this system",
                    "properties": {
                      "pid": {
                        "type": "number",
                        "description": "The running process' PID that we should attach to",
                        "default": 12345
                      }
                    }
                  }
                }
              },
              "debug": {
                "type": "object",
                "description": "Developer Options (of Midas)",
                "default": {
                  "recordSession": false,
                  "logging": {
                    "dapMessages": false
                  }
                },
                "properties": {
                  "recordSession": {
                    "type": "boolean",
                    "description": "Record debug session using RR. This will spawn rr which in turn spawns MDB that we connect to as a debug adapter"
                  },
                  "logging": {
                    "type": "object",
                    "description": "Configure various levels of logging",
                    "properties": {
                      "dapMessages": {
                        "type": "boolean",
                        "description": "Log the messages between the debug adapter and the client"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "midas-native",
            "request": "launch",
            "name": "Midas Launch",
            "program": "${workspaceFolder}/program",
            "stopOnEntry": true,
            "args": [],
            "dbgArgs": [],
            "mdbPath": "mdb",
            "ignoreStandardLibrary": true
          }
        ],
        "configurationSnippets": [
          {
            "name": "midas-native",
            "label": "MDB: Launch",
            "description": "Launch a native Midas debug session",
            "body": {
              "type": "midas-native",
              "request": "launch",
              "name": "Midas Launch",
              "program": "${workspaceFolder}/program",
              "stopOnEntry": true,
              "args": [],
              "dbgArgs": [],
              "debug": {
                "recordSession": true
              },
              "mdbPath": "/path/to/mdb",
              "ignoreStandardLibrary": true
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "node ./test/runTest.js",
    "package": "vsce package --yarn",
    "format": "prettier --write ."
  },
  "devDependencies": {
    "@babel/cli": "^7.19.3",
    "@babel/core": "^7.20.5",
    "@babel/eslint-parser": "^7.19.1",
    "@babel/preset-env": "^7.20.2",
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.11.15",
    "@types/vscode": "^1.96.0",
    "@vscode/debugadapter": "^1.65.0",
    "@vscode/debugadapter-testsupport": "^1.63.0",
    "@vscode/test-electron": "^2.2.1",
    "eslint": "^8.29.0",
    "glob": "^8.0.3",
    "mocha": "^10.2.0",
    "prettier": "3.4.2",
    "typescript": "^4.9.4"
  },
  "author": {
    "name": "Andreas Farre",
    "email": "andreas@farre.se"
  },
  "maintainers": [
    {
      "name": "Andreas Farre",
      "email": "andreas@farre.se"
    },
    {
      "name": "Simon Farre",
      "email": "simon.farre.cx@gmail.com"
    }
  ],
  "dependencies": {
    "@vscode/codicons": "^0.0.33",
    "@vscode/debugadapter": "^1.65.0"
  }
}
